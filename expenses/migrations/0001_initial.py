# Generated by Django 3.2.5 on 2021-07-19 09:00

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.datetime.utcnow)),
                ('tea_coffee', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('electricity', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('water_bill', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('stationary', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('labour_expense', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('property_tax', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('maintainence_expense', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('machinory_expense', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('insurence_expence', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('ruff_expense', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('employee_insurance_expense', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('total_Amount', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0, 'Value should not be less than 0')])),
                ('remark', models.TextField(blank=True, max_length=50, null=True)),
            ],
        ),
    ]
